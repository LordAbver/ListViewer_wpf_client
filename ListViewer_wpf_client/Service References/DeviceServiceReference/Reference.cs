//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ListViewer_wpf_client.DeviceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceVersion", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Con" +
        "figuration")]
    [System.SerializableAttribute()]
    public partial class ServiceVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, System.Version> ServiceModulesVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, System.Version> ServiceModulesVersion {
            get {
                return this.ServiceModulesVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceModulesVersionField, value) != true)) {
                    this.ServiceModulesVersionField = value;
                    this.RaisePropertyChanged("ServiceModulesVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
        "")]
    [System.SerializableAttribute()]
    public partial class DeviceServerNotCreatedError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
        "")]
    [System.SerializableAttribute()]
    public partial class DeviceServerNotRunningError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
        "ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceNotExistError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceListenerError))]
    public partial class DeviceServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
        "ice")]
    [System.SerializableAttribute()]
    public partial class DeviceError : ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
        "ice")]
    [System.SerializableAttribute()]
    public partial class DeviceNotExistError : ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceListenerError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
        "ice")]
    [System.SerializableAttribute()]
    public partial class DeviceListenerError : ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DiskDeviceDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.BcrDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.GpiDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.OtherMediaDeviceDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.AnoDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.SwitcherDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.LmsVtrDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.LmsDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.VtrDTO))]
    public partial class DeviceDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DeviceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.DevType DeviceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DeviceNumber {
            get {
                return this.DeviceNumberField;
            }
            set {
                if ((this.DeviceNumberField.Equals(value) != true)) {
                    this.DeviceNumberField = value;
                    this.RaisePropertyChanged("DeviceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.DevType DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((this.DeviceTypeField.Equals(value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiskDeviceDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class DiskDeviceDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.OtherMediaDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MStorageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StorageChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.MediaPlayerDTO[] ThePlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.OtherMediaDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MStorageCount {
            get {
                return this.MStorageCountField;
            }
            set {
                if ((this.MStorageCountField.Equals(value) != true)) {
                    this.MStorageCountField = value;
                    this.RaisePropertyChanged("MStorageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxPlayers {
            get {
                return this.MaxPlayersField;
            }
            set {
                if ((this.MaxPlayersField.Equals(value) != true)) {
                    this.MaxPlayersField = value;
                    this.RaisePropertyChanged("MaxPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte StorageChanged {
            get {
                return this.StorageChangedField;
            }
            set {
                if ((this.StorageChangedField.Equals(value) != true)) {
                    this.StorageChangedField = value;
                    this.RaisePropertyChanged("StorageChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.MediaPlayerDTO[] ThePlayers {
            get {
                return this.ThePlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.ThePlayersField, value) != true)) {
                    this.ThePlayersField = value;
                    this.RaisePropertyChanged("ThePlayers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BcrDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class BcrDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.BCRDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO SomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.BCRStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.BCRDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Som {
            get {
                return this.SomField;
            }
            set {
                if ((object.ReferenceEquals(this.SomField, value) != true)) {
                    this.SomField = value;
                    this.RaisePropertyChanged("Som");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.BCRStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GpiDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class GpiDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.GPIDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxGpisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.GPIStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.GpiChannelDTO[] TheGpiDevField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.GPIDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxGpis {
            get {
                return this.MaxGpisField;
            }
            set {
                if ((this.MaxGpisField.Equals(value) != true)) {
                    this.MaxGpisField = value;
                    this.RaisePropertyChanged("MaxGpis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.GPIStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.GpiChannelDTO[] TheGpiDev {
            get {
                return this.TheGpiDevField;
            }
            set {
                if ((object.ReferenceEquals(this.TheGpiDevField, value) != true)) {
                    this.TheGpiDevField = value;
                    this.RaisePropertyChanged("TheGpiDev");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherMediaDeviceDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class OtherMediaDeviceDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.OtherMediaDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MStorageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StorageChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.MediaPlayerDTO[] ThePlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.OtherMediaDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MStorageCount {
            get {
                return this.MStorageCountField;
            }
            set {
                if ((this.MStorageCountField.Equals(value) != true)) {
                    this.MStorageCountField = value;
                    this.RaisePropertyChanged("MStorageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxPlayers {
            get {
                return this.MaxPlayersField;
            }
            set {
                if ((this.MaxPlayersField.Equals(value) != true)) {
                    this.MaxPlayersField = value;
                    this.RaisePropertyChanged("MaxPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte StorageChanged {
            get {
                return this.StorageChangedField;
            }
            set {
                if ((this.StorageChangedField.Equals(value) != true)) {
                    this.StorageChangedField = value;
                    this.RaisePropertyChanged("StorageChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.MediaPlayerDTO[] ThePlayers {
            get {
                return this.ThePlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.ThePlayersField, value) != true)) {
                    this.ThePlayersField = value;
                    this.RaisePropertyChanged("ThePlayers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnoDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class AnoDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.AnnotatorDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.AnnotatorStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.AnnotatorDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.AnnotatorStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitcherDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class SwitcherDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.SwitchDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.SwitcherDimensionsDTO DimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.SwitcherStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SwitchpointInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SwitchpointOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.SwitcherSystemInput SystemInputField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.SwitchDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.SwitcherDimensionsDTO Dimensions {
            get {
                return this.DimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true)) {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.SwitcherStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SwitchpointIn {
            get {
                return this.SwitchpointInField;
            }
            set {
                if ((this.SwitchpointInField.Equals(value) != true)) {
                    this.SwitchpointInField = value;
                    this.RaisePropertyChanged("SwitchpointIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SwitchpointOut {
            get {
                return this.SwitchpointOutField;
            }
            set {
                if ((this.SwitchpointOutField.Equals(value) != true)) {
                    this.SwitchpointOutField = value;
                    this.RaisePropertyChanged("SwitchpointOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.SwitcherSystemInput SystemInput {
            get {
                return this.SystemInputField;
            }
            set {
                if ((this.SystemInputField.Equals(value) != true)) {
                    this.SystemInputField = value;
                    this.RaisePropertyChanged("SystemInput");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LmsVtrDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class LmsVtrDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.VTRDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ListNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ListOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO TapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.VTRTypes TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.VTRDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaState {
            get {
                return this.DeviceMediaStateField;
            }
            set {
                if ((this.DeviceMediaStateField.Equals(value) != true)) {
                    this.DeviceMediaStateField = value;
                    this.RaisePropertyChanged("DeviceMediaState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ListNum {
            get {
                return this.ListNumField;
            }
            set {
                if ((this.ListNumField.Equals(value) != true)) {
                    this.ListNumField = value;
                    this.RaisePropertyChanged("ListNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ListOwner {
            get {
                return this.ListOwnerField;
            }
            set {
                if ((this.ListOwnerField.Equals(value) != true)) {
                    this.ListOwnerField = value;
                    this.RaisePropertyChanged("ListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RunStatusField, value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Tape {
            get {
                return this.TapeField;
            }
            set {
                if ((object.ReferenceEquals(this.TapeField, value) != true)) {
                    this.TapeField = value;
                    this.RaisePropertyChanged("Tape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.VTRTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LmsDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class LmsDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BinChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BinCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BinDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.LMSDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmptyBinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxVtrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.LMSStates[] StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.LMSStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SwitchpointInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SwitchpointOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.LmsVtrDTO[] TheLmsVtrField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BinChanged {
            get {
                return this.BinChangedField;
            }
            set {
                if ((this.BinChangedField.Equals(value) != true)) {
                    this.BinChangedField = value;
                    this.RaisePropertyChanged("BinChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BinCount {
            get {
                return this.BinCountField;
            }
            set {
                if ((this.BinCountField.Equals(value) != true)) {
                    this.BinCountField = value;
                    this.RaisePropertyChanged("BinCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BinDisplay {
            get {
                return this.BinDisplayField;
            }
            set {
                if ((this.BinDisplayField.Equals(value) != true)) {
                    this.BinDisplayField = value;
                    this.RaisePropertyChanged("BinDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.LMSDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmptyBins {
            get {
                return this.EmptyBinsField;
            }
            set {
                if ((this.EmptyBinsField.Equals(value) != true)) {
                    this.EmptyBinsField = value;
                    this.RaisePropertyChanged("EmptyBins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxVtrs {
            get {
                return this.MaxVtrsField;
            }
            set {
                if ((this.MaxVtrsField.Equals(value) != true)) {
                    this.MaxVtrsField = value;
                    this.RaisePropertyChanged("MaxVtrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.LMSStates[] State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.LMSStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SwitchpointIn {
            get {
                return this.SwitchpointInField;
            }
            set {
                if ((this.SwitchpointInField.Equals(value) != true)) {
                    this.SwitchpointInField = value;
                    this.RaisePropertyChanged("SwitchpointIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SwitchpointOut {
            get {
                return this.SwitchpointOutField;
            }
            set {
                if ((this.SwitchpointOutField.Equals(value) != true)) {
                    this.SwitchpointOutField = value;
                    this.RaisePropertyChanged("SwitchpointOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.LmsVtrDTO[] TheLmsVtr {
            get {
                return this.TheLmsVtrField;
            }
            set {
                if ((object.ReferenceEquals(this.TheLmsVtrField, value) != true)) {
                    this.TheLmsVtrField = value;
                    this.RaisePropertyChanged("TheLmsVtr");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VtrDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class VtrDTO : ListViewer_wpf_client.DeviceServiceReference.DeviceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.VTRDevices DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ListNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ListOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO TapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.VTRTypes TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.VTRDevices DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((this.DeviceBrandField.Equals(value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaState {
            get {
                return this.DeviceMediaStateField;
            }
            set {
                if ((this.DeviceMediaStateField.Equals(value) != true)) {
                    this.DeviceMediaStateField = value;
                    this.RaisePropertyChanged("DeviceMediaState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ListNum {
            get {
                return this.ListNumField;
            }
            set {
                if ((this.ListNumField.Equals(value) != true)) {
                    this.ListNumField = value;
                    this.RaisePropertyChanged("ListNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ListOwner {
            get {
                return this.ListOwnerField;
            }
            set {
                if ((this.ListOwnerField.Equals(value) != true)) {
                    this.ListOwnerField = value;
                    this.RaisePropertyChanged("ListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RunStatusField, value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Tape {
            get {
                return this.TapeField;
            }
            set {
                if ((object.ReferenceEquals(this.TapeField, value) != true)) {
                    this.TapeField = value;
                    this.RaisePropertyChanged("Tape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.VTRTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum DevType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Empty = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VTR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BCR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Switcher = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPI = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disk = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Annotator = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USD = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherMediaDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum OtherMediaDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Digi360 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonySSCU1000 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchSS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronMAX = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronCODI = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrestoCG = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTSVidiFont = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuantelSS = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VideoDisk = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemoVideoDisk = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProfileVideoDisk = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CBVideoDisk = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DCBVideoDisk = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCCom = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuantaDelta = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronScribe = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyMiniDisk = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        D2PortVideoDisk = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrontoSS = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronMaxine = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediaGPIDevice = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BFETimer = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        D3PortVideoDisk = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        D4PortVideoDisk = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        D5PortVideoDisk = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Demo5PortVideoDisk = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        D8PortVideoDisk = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cavena4Ch = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ess3SS = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlashFileSS = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DPM700 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClipBoxVideoDisk = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IRDeto = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wagner = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IBTVPS9601 = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerCom10H = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ess10ChDevice = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchLG = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        D10PortVideoDisk = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OxtelKeyer = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EncoDad = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IBTVPS9701 = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCodi = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollageCG = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InfiniteCG = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeDekoCG = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenStSvr2 = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PictureBox2CSS = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AstonCG = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IBTVPS9702 = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageStoreSS = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HPBufferVideoDisk = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrbanAirtimeAC = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlashFileSS2 = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronMAX2 = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchSS2 = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThomsonMPEG = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLIDVideoDisk = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediaRequester = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediaDistributor = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AvalonArchive = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediaRDRO = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClipBoxCacheDisk = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CPTTimer = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STAS10Disk = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MAV70Disk = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseDistributor = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiRequester = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiskArchive = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CharismaDVE = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LGA100Logo = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Evertz8074Encoder = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SGIVideoDisk = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BugBurnerSS = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SONYDME7000DVE = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NorpakTES5Encoder = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyMDB3 = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IBTVPS9703 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyNewsBase = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EEGEN470Encoder = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpencerSS = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProxyFTP = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NDCPDevice = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLIDProfileDisk = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLD10PortVideoDisk = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLD8PortVideoDisk = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLD5PortVideoDisk = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLD4PortVideoDisk = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLD3PortVideoDisk = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VLD2PortVideoDisk = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchTT = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysMediaPDC = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronDuet2C = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronDuet = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SAVLG50DK = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DavidMultiplayer = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReservedOMD96 = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LGA200Logo = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FPDVastBitScream = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingMediaGPIDevice = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuartzLGDVE = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        E9625LG = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChMediaRequester = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AyatoDevice = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlipFactory = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchLGMO2 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericSerCom = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GSDevices = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChyronDuetLEx = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemoMediaDevice = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NDCPVirtualDevice = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchOpusSubDevice = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCLitePesaSubDevice = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VPSAlbrecht = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EvertzMVP = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EvertzMVP10H = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FABSubtitler4Ch = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        E9625LGADiskStandalone = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImgIntuition = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved119 = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VirtualVideoDisk = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchDTP = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchDTP20 = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DaletMD = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FactumDBS100 = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PPClarity = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VSMSubDevice = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DumbDevice = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InscriberStrata = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        E9725LGLongName = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchMCapture = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EvertzQMCDVELogo = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageStore750 = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NexioDisk = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PipeVideoDisk = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        K2AMPDisk = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        K2AMPDiskTCPIP = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        K2AMPDiskRS422 = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuetHyperX = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AMPLogo = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PMIntuiSubDev = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DTP_Insertion = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IconMasterSubDev = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CHYRDUET2CLEG = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenST24 = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BreakawayDevice = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OmneonSpectrumDisk = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IconStationXML = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtenGPIdev = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VPDDevice = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaestroMSD = 150,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaPlayerDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class MediaPlayerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ListNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ListOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO TapeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaState {
            get {
                return this.DeviceMediaStateField;
            }
            set {
                if ((this.DeviceMediaStateField.Equals(value) != true)) {
                    this.DeviceMediaStateField = value;
                    this.RaisePropertyChanged("DeviceMediaState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ListNum {
            get {
                return this.ListNumField;
            }
            set {
                if ((this.ListNumField.Equals(value) != true)) {
                    this.ListNumField = value;
                    this.RaisePropertyChanged("ListNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ListOwner {
            get {
                return this.ListOwnerField;
            }
            set {
                if ((this.ListOwnerField.Equals(value) != true)) {
                    this.ListOwnerField = value;
                    this.RaisePropertyChanged("ListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RunStatusField, value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Tape {
            get {
                return this.TapeField;
            }
            set {
                if ((object.ReferenceEquals(this.TapeField, value) != true)) {
                    this.TapeField = value;
                    this.RaisePropertyChanged("Tape");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeCodeDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Timecode")]
    [System.SerializableAttribute()]
    public partial class TimeCodeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte FrameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.FrameRateDTO FrameRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SecondField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Frame {
            get {
                return this.FrameField;
            }
            set {
                if ((this.FrameField.Equals(value) != true)) {
                    this.FrameField = value;
                    this.RaisePropertyChanged("Frame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.FrameRateDTO FrameRate {
            get {
                return this.FrameRateField;
            }
            set {
                if ((object.ReferenceEquals(this.FrameRateField, value) != true)) {
                    this.FrameRateField = value;
                    this.RaisePropertyChanged("FrameRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Hour {
            get {
                return this.HourField;
            }
            set {
                if ((this.HourField.Equals(value) != true)) {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Minute {
            get {
                return this.MinuteField;
            }
            set {
                if ((this.MinuteField.Equals(value) != true)) {
                    this.MinuteField = value;
                    this.RaisePropertyChanged("Minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Second {
            get {
                return this.SecondField;
            }
            set {
                if ((this.SecondField.Equals(value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaStateType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum MediaStateType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoChange = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InWithID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InWithoutID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InInternalID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Out = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutToStorage = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cued = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cueing = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Threading = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unthreading = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TensionedOn = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TensionedOff = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Playing = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recording = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyForStorage = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum RunStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DonePlay = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Switch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlayIssued = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Preroll = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoneRecord = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postroll = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditOn = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditOff = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoneSkipped = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved11 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recissued = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved13 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved14 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved15 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved16 = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum Status : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Local = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unthreaded = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Eject = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cued = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stop = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopping = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rewind = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forward = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Record = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UbPlay = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Play = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForwardShuttle = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RewindShuttle = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForwardVar = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RewindVar = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForwardJog = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RewindJog = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Slow = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cueing = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cue = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TensionRel = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TensionOn = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Still = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reject = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thread = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inject = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UbReadDone = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StandbyOn = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RewindEject = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown1 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoVTR = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitionIt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviewIt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreadVTR = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSThread = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendVTRToBin = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExTake = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkEjectBin = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EjectBin = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSSysPreset = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSSysReset = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSTimeSet = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSEleInit = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSBCRead = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSIDRead = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSBinStatus = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSVTRRead = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSDoThread = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSDoPlay = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSOnAir = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSBinLight = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSBCReadMove = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSSwitchInit = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSSysStat = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSSysVTRReset = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VTRNoCom = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VTRPulled = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreadError = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExTakeColor = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditOn = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditOff = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TMSelect = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PresetSelect = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExTakeInit = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSDisplay = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSCancelCue = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPISetReset = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PresetIt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSBinReset = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSThreadReturn = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CueWithData = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlayNoThread = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SlowNoThread = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StopNoThread = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StillNoThread = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSMoveElevator = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TSO = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurgeHiddenBins = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveAllStorage = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADCNetError = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCGen2TCTape = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PresetTCGen = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadUbid = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecordCue = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviewPlay = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExTakeName = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteStorageByID = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProtectStorageByID = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnprotectStorageByID = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CacheNextStorage = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceInitializing = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpaceRemainingCommand = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SizeOfIDCommand = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteProtectIDCommand = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndeleteProtectIDCommand = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDRequestCommand = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RenameIDCommand = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewCopyOfIDCommand = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteVideoFileCommand = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CopyVideoFileCommand = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteVideoFileFromDiskCommand = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbortCopyVideoFileCommand = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSOMCommand = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetDurationCommand = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetFromArchiveCommand = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SentToArchiveCommand = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteFromArchiveCommand = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadUserBits = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CueWithIDData = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoBuzzer = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetSegmentID = 113,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameRateDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Timecode")]
    [System.SerializableAttribute()]
    public partial class FrameRateDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropframeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.FrameRateEnum FrameRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Dropframe {
            get {
                return this.DropframeField;
            }
            set {
                if ((this.DropframeField.Equals(value) != true)) {
                    this.DropframeField = value;
                    this.RaisePropertyChanged("Dropframe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.FrameRateEnum FrameRate {
            get {
                return this.FrameRateField;
            }
            set {
                if ((this.FrameRateField.Equals(value) != true)) {
                    this.FrameRateField = value;
                    this.RaisePropertyChanged("FrameRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameRateEnum", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum FrameRateEnum : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAL = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NTSC = 41,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BCRDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum BCRDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVBR10 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCWAND30 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalBCReader = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UniTech830 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BCRStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum BCRStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read1 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown1 = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPIDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum GPIDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPISwitchDevice = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPIStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum GPIStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GpiChannelDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class GpiChannelDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ListNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ListOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.Status StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.MediaStateType DeviceMediaState {
            get {
                return this.DeviceMediaStateField;
            }
            set {
                if ((this.DeviceMediaStateField.Equals(value) != true)) {
                    this.DeviceMediaStateField = value;
                    this.RaisePropertyChanged("DeviceMediaState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdChange {
            get {
                return this.IdChangeField;
            }
            set {
                if ((this.IdChangeField.Equals(value) != true)) {
                    this.IdChangeField = value;
                    this.RaisePropertyChanged("IdChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ListNum {
            get {
                return this.ListNumField;
            }
            set {
                if ((this.ListNumField.Equals(value) != true)) {
                    this.ListNumField = value;
                    this.RaisePropertyChanged("ListNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ListOwner {
            get {
                return this.ListOwnerField;
            }
            set {
                if ((this.ListOwnerField.Equals(value) != true)) {
                    this.ListOwnerField = value;
                    this.RaisePropertyChanged("ListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.RunStatus[] RunStatus {
            get {
                return this.RunStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RunStatusField, value) != true)) {
                    this.RunStatusField = value;
                    this.RaisePropertyChanged("RunStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotatorDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum AnnotatorDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LAN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Demo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPI = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPIA = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotatorStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum AnnotatorStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Null = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSerial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fault = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoDevice = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Black = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CB = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Program = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlackAudio = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CBAudio = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgramAudio = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitcherDimensionsDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class SwitcherDimensionsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SwitcherDimensionInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SwitcherDimensionOutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SwitcherDimensionIn {
            get {
                return this.SwitcherDimensionInField;
            }
            set {
                if ((this.SwitcherDimensionInField.Equals(value) != true)) {
                    this.SwitcherDimensionInField = value;
                    this.RaisePropertyChanged("SwitcherDimensionIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SwitcherDimensionOut {
            get {
                return this.SwitcherDimensionOutField;
            }
            set {
                if ((this.SwitcherDimensionOutField.Equals(value) != true)) {
                    this.SwitcherDimensionOutField = value;
                    this.RaisePropertyChanged("SwitcherDimensionOut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum SwitchDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatatekD4300A = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVG100 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCS2000 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVGTenXL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVGMaster21 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVGHorizon = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVG440 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVG7000 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GVG20Ten = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USI160 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DATA2400 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relay8X1 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyRouter = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCS3000 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USI500 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageVideo = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProBel2 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sony1616 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemoRouter = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTSSaturn = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sony3232 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sony6464 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcSWTC = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thom9920 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ross316 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pesa2400 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProBelSwitch = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCS1600 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USIUDI = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchRouter = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchHX1Router = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCSMaster21 = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCSProdigy = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuartzRouter = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCSSonyDVSM1000 = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCSTektronixM2100 = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TelectRouter = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADComRouter = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionRouter1308 = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionRouter3064 = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionRouter3128 = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionRouter3512 = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTSMarsRouter = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionRouter1055 = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LMSBasedRouter = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProBelTX220 = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProBelSYS2 = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProBelSYS3 = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thomson9920 = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VideotekRS12 = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sierra1616 = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EasyKey31 = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemoMCSwitcher = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sony256Router = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetworkProlineRouter = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OxtelPresmaster = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SnellTriky = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyIsara = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SierraRouter = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LysisRouter = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        M2100AuxRouter = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sony4096 = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MirandaHDRouter = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        E1202Router = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuartzQMC = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EvertzMCS = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCSOxtel = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionMCS = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThomsonDD20M = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchOpusMCS = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVisionRouter = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PesaMCLite = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GRVMaestro = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USI2020 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProBelTX520 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VSMRouter = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IconMasterMCS = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeitchPTRouter = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IconMasterAuxRouter = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EvertzQMC = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiTech9001Router = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVision9000 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MCSImg750 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NvisionComprouter = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrandMasterMCS = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrandMasterAUX_Router = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NGCMCSwitcher = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HarrisPCQRouter = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Usi4000 = 88,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitcherStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum SwitcherStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCommunication = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitcherSystemInput", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum SwitcherSystemInput : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoInput = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Black = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ColorBar = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StationId = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Init = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VTRDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum VTRDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyVTR = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmpexVTR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDemoVTR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VPR300VTR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PinnacleDVExtreme = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PanasonicVTR = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtVTR = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyXDDeck = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VTRTypes", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum VTRTypes : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalVTR = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompileVTR = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LMSDevices", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum LMSDevices : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBetaCart = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDVC80 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVC80 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDVC300 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVC400 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDVC500 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVC500 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDVC1000 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVC1000 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlexiCart = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDemoBeta = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyDemo1000 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsTCS90 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsTCS90M = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsTCS90LEM = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsTCS90A = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsTCS2000 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVC1000A = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart201 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart401 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart204 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart404 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart208 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart408 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart212 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcCart412 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsProphet = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThomsonProCart = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SonyBVC400B = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarcSmartCart = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DVCamFlexiCart = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OdeticsTCS90DVC = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XDCamCart80Bin = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XDCamCart640Bin = 33,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LMSStates", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum LMSStates : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpen = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElevatorJam = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PortFull = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VTRJam = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinVerify = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InInitial = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shutdown = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LMSStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Devices")]
    public enum LMSStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCom = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCommunicating = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
        "")]
    [System.SerializableAttribute()]
    public partial class ServiceParametersValidationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects")]
    [System.SerializableAttribute()]
    public partial class StorageItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO BinDurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinEIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.BinNoticeEnum BinNoticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BinNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO BinSomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.DeviceServiceReference.StorageFlagEnum[] StorageSetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO BinDur {
            get {
                return this.BinDurField;
            }
            set {
                if ((object.ReferenceEquals(this.BinDurField, value) != true)) {
                    this.BinDurField = value;
                    this.RaisePropertyChanged("BinDur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinEId {
            get {
                return this.BinEIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BinEIdField, value) != true)) {
                    this.BinEIdField = value;
                    this.RaisePropertyChanged("BinEId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.BinNoticeEnum BinNotice {
            get {
                return this.BinNoticeField;
            }
            set {
                if ((this.BinNoticeField.Equals(value) != true)) {
                    this.BinNoticeField = value;
                    this.RaisePropertyChanged("BinNotice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BinNumber {
            get {
                return this.BinNumberField;
            }
            set {
                if ((this.BinNumberField.Equals(value) != true)) {
                    this.BinNumberField = value;
                    this.RaisePropertyChanged("BinNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.TimeCodeDTO BinSom {
            get {
                return this.BinSomField;
            }
            set {
                if ((object.ReferenceEquals(this.BinSomField, value) != true)) {
                    this.BinSomField = value;
                    this.RaisePropertyChanged("BinSom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinTitle {
            get {
                return this.BinTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.BinTitleField, value) != true)) {
                    this.BinTitleField = value;
                    this.RaisePropertyChanged("BinTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerCount {
            get {
                return this.OwnerCountField;
            }
            set {
                if ((this.OwnerCountField.Equals(value) != true)) {
                    this.OwnerCountField = value;
                    this.RaisePropertyChanged("OwnerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.DeviceServiceReference.StorageFlagEnum[] StorageSet {
            get {
                return this.StorageSetField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageSetField, value) != true)) {
                    this.StorageSetField = value;
                    this.RaisePropertyChanged("StorageSet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BinNoticeEnum", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Storage")]
    public enum BinNoticeEnum : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoNotice = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinShouldEject = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalLoad = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNotValid = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinToSecondary = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageFlagEnum", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Storage")]
    public enum StorageFlagEnum : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialInCacheQueue = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialNotRecorded = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialInArchive = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialDeleteProtected = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialNotPlay = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialNotTransfer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialNotArchive = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialType422 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StorageFlagMax = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginSession", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    [System.SerializableAttribute()]
    public partial class LoginSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum ServerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connecting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnecting = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aborted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageNotificationType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum StorageNotificationType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadWholeStorage = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedsRefresh = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DeviceServiceReference.IDeviceService", CallbackContract=typeof(ListViewer_wpf_client.DeviceServiceReference.IDeviceServiceCallback))]
    public interface IDeviceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatableService/IsAlive", ReplyAction="http://tempuri.org/IHeartbeatableService/IsAliveResponse")]
        void IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatableService/GetVersion", ReplyAction="http://tempuri.org/IHeartbeatableService/GetVersionResponse")]
        ListViewer_wpf_client.DeviceServiceReference.ServiceVersion GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/RegisterDeviceListener", ReplyAction="http://tempuri.org/IDeviceService/RegisterDeviceListenerResponse")]
        bool RegisterDeviceListener(string server);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/UnregisterDeviceListener")]
        void UnregisterDeviceListener(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetDevicesCount", ReplyAction="http://tempuri.org/IDeviceService/GetDevicesCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetDevicesCountDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetDevicesCountDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetDevicesCountDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        int GetDevicesCount(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetDevices", ReplyAction="http://tempuri.org/IDeviceService/GetDevicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetDevicesDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetDevicesDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetDevicesDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.DeviceServiceReference.DeviceDTO[] GetDevices(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetDevicesByNumbers", ReplyAction="http://tempuri.org/IDeviceService/GetDevicesByNumbersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceNotExistError), Action="http://tempuri.org/IDeviceService/GetDevicesByNumbersDeviceNotExistErrorFault", Name="DeviceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetDevicesByNumbersDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetDevicesByNumbersDeviceServerNotRunningErrorF" +
            "ault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetDevicesByNumbersDeviceServerNotCreatedErrorF" +
            "ault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.DeviceServiceReference.DeviceDTO[] GetDevicesByNumbers(string server, byte[] deviceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/RegisterConnectionStateListener", ReplyAction="http://tempuri.org/IDeviceService/RegisterConnectionStateListenerResponse")]
        bool RegisterConnectionStateListener(string server);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/UnregisterConnectionStateListener")]
        void UnregisterConnectionStateListener(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/SetSwitcherOptions", ReplyAction="http://tempuri.org/IDeviceService/SetSwitcherOptionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.ServiceParametersValidationError), Action="http://tempuri.org/IDeviceService/SetSwitcherOptionsServiceParametersValidationEr" +
            "rorFault", Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/SetSwitcherOptionsDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/SetSwitcherOptionsDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/SetSwitcherOptionsDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceError), Action="http://tempuri.org/IDeviceService/SetSwitcherOptionsDeviceErrorFault", Name="DeviceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        void SetSwitcherOptions(string server, ListViewer_wpf_client.DeviceServiceReference.SwitcherDTO switcher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetSwitcherList", ReplyAction="http://tempuri.org/IDeviceService/GetSwitcherListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetSwitcherListDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetSwitcherListDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetSwitcherListDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        ListViewer_wpf_client.DeviceServiceReference.SwitcherDTO[] GetSwitcherList(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetSwitcherDimensions", ReplyAction="http://tempuri.org/IDeviceService/GetSwitcherDimensionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetSwitcherDimensionsDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetSwitcherDimensionsDeviceServerNotCreatedErro" +
            "rFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetSwitcherDimensionsDeviceServerNotRunningErro" +
            "rFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceError), Action="http://tempuri.org/IDeviceService/GetSwitcherDimensionsDeviceErrorFault", Name="DeviceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        ListViewer_wpf_client.DeviceServiceReference.SwitcherDimensionsDTO GetSwitcherDimensions(string server, int switcher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/DeleteStorageItems", ReplyAction="http://tempuri.org/IDeviceService/DeleteStorageItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/DeleteStorageItemsDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/DeleteStorageItemsDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/DeleteStorageItemsDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int DeleteStorageItems(ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] storageItems, string server, int deviceChannel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/ProtectStorageItems", ReplyAction="http://tempuri.org/IDeviceService/ProtectStorageItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/ProtectStorageItemsDeviceServerNotRunningErrorF" +
            "ault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/ProtectStorageItemsDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/ProtectStorageItemsDeviceServerNotCreatedErrorF" +
            "ault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int ProtectStorageItems(ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] storageItems, string server, int deviceChannel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/UnprotectStorageItems", ReplyAction="http://tempuri.org/IDeviceService/UnprotectStorageItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/UnprotectStorageItemsDeviceServerNotCreatedErro" +
            "rFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/UnprotectStorageItemsDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/UnprotectStorageItemsDeviceServerNotRunningErro" +
            "rFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int UnprotectStorageItems(ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] storageItems, string server, int deviceChannel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetStoragesList", ReplyAction="http://tempuri.org/IDeviceService/GetStoragesListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetStoragesListDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetStoragesListDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetStoragesListDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.DeviceServiceReference.DeviceDTO[] GetStoragesList(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetStorage", ReplyAction="http://tempuri.org/IDeviceService/GetStorageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetStorageDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetStorageDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetStorageDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] GetStorage(string server, int deviceChannel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/RegisterStorageListener", ReplyAction="http://tempuri.org/IDeviceService/RegisterStorageListenerResponse")]
        bool RegisterStorageListener(string server);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/UnregisterStorageListener")]
        void UnregisterStorageListener(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetAvailableDeviceServers", ReplyAction="http://tempuri.org/IDeviceService/GetAvailableDeviceServersResponse")]
        string[] GetAvailableDeviceServers(ListViewer_wpf_client.DeviceServiceReference.LoginSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetFreeDiskSpace", ReplyAction="http://tempuri.org/IDeviceService/GetFreeDiskSpaceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IDeviceService/GetFreeDiskSpaceDeviceServerNotRunningErrorFaul" +
            "t", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IDeviceService/GetFreeDiskSpaceDeviceServerNotCreatedErrorFaul" +
            "t", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.DeviceServiceReference.DeviceServiceError), Action="http://tempuri.org/IDeviceService/GetFreeDiskSpaceDeviceServiceErrorFault", Name="DeviceServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.DeviceServ" +
            "ice")]
        string[] GetFreeDiskSpace(string server, int deviceChannel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/OnDevicesChange")]
        void OnDevicesChange(string server);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/OnDevicesUpdated")]
        void OnDevicesUpdated(string server, byte[] deviceNumbers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/OnDevicesDeleted")]
        void OnDevicesDeleted(string server, byte[] deviceNumbers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/OnDevicesAdded")]
        void OnDevicesAdded(string server, byte[] deviceNumbers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/OnConnectionStateChange")]
        void OnConnectionStateChange(string server, ListViewer_wpf_client.DeviceServiceReference.ServerStatus serverStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/OnStorageUpdate")]
        void OnStorageUpdate(string server, int deviceChannel, ListViewer_wpf_client.DeviceServiceReference.StorageNotificationType type);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDeviceService/CheckAvailability")]
        void CheckAvailability();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceServiceChannel : ListViewer_wpf_client.DeviceServiceReference.IDeviceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceServiceClient : System.ServiceModel.DuplexClientBase<ListViewer_wpf_client.DeviceServiceReference.IDeviceService>, ListViewer_wpf_client.DeviceServiceReference.IDeviceService {
        
        public DeviceServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DeviceServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DeviceServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void IsAlive() {
            base.Channel.IsAlive();
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.ServiceVersion GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public bool RegisterDeviceListener(string server) {
            return base.Channel.RegisterDeviceListener(server);
        }
        
        public void UnregisterDeviceListener(string server) {
            base.Channel.UnregisterDeviceListener(server);
        }
        
        public int GetDevicesCount(string server) {
            return base.Channel.GetDevicesCount(server);
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.DeviceDTO[] GetDevices(string server) {
            return base.Channel.GetDevices(server);
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.DeviceDTO[] GetDevicesByNumbers(string server, byte[] deviceNumber) {
            return base.Channel.GetDevicesByNumbers(server, deviceNumber);
        }
        
        public bool RegisterConnectionStateListener(string server) {
            return base.Channel.RegisterConnectionStateListener(server);
        }
        
        public void UnregisterConnectionStateListener(string server) {
            base.Channel.UnregisterConnectionStateListener(server);
        }
        
        public void SetSwitcherOptions(string server, ListViewer_wpf_client.DeviceServiceReference.SwitcherDTO switcher) {
            base.Channel.SetSwitcherOptions(server, switcher);
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.SwitcherDTO[] GetSwitcherList(string server) {
            return base.Channel.GetSwitcherList(server);
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.SwitcherDimensionsDTO GetSwitcherDimensions(string server, int switcher) {
            return base.Channel.GetSwitcherDimensions(server, switcher);
        }
        
        public int DeleteStorageItems(ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] storageItems, string server, int deviceChannel) {
            return base.Channel.DeleteStorageItems(storageItems, server, deviceChannel);
        }
        
        public int ProtectStorageItems(ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] storageItems, string server, int deviceChannel) {
            return base.Channel.ProtectStorageItems(storageItems, server, deviceChannel);
        }
        
        public int UnprotectStorageItems(ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] storageItems, string server, int deviceChannel) {
            return base.Channel.UnprotectStorageItems(storageItems, server, deviceChannel);
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.DeviceDTO[] GetStoragesList(string server) {
            return base.Channel.GetStoragesList(server);
        }
        
        public ListViewer_wpf_client.DeviceServiceReference.StorageItemDTO[] GetStorage(string server, int deviceChannel) {
            return base.Channel.GetStorage(server, deviceChannel);
        }
        
        public bool RegisterStorageListener(string server) {
            return base.Channel.RegisterStorageListener(server);
        }
        
        public void UnregisterStorageListener(string server) {
            base.Channel.UnregisterStorageListener(server);
        }
        
        public string[] GetAvailableDeviceServers(ListViewer_wpf_client.DeviceServiceReference.LoginSession session) {
            return base.Channel.GetAvailableDeviceServers(session);
        }
        
        public string[] GetFreeDiskSpace(string server, int deviceChannel) {
            return base.Channel.GetFreeDiskSpace(server, deviceChannel);
        }
    }
}
