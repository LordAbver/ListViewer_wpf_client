//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ListViewer_wpf_client.ListServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceVersion", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Con" +
        "figuration")]
    [System.SerializableAttribute()]
    public partial class ServiceVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, System.Version> ServiceModulesVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, System.Version> ServiceModulesVersion {
            get {
                return this.ServiceModulesVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceModulesVersionField, value) != true)) {
                    this.ServiceModulesVersionField = value;
                    this.RaisePropertyChanged("ServiceModulesVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginSession", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    [System.SerializableAttribute()]
    public partial class LoginSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
        "")]
    [System.SerializableAttribute()]
    public partial class DeviceServerNotRunningError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
        "e")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListListenerError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.EventError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListNotEnabledError))]
    public partial class ListServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListListenerError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
        "e")]
    [System.SerializableAttribute()]
    public partial class ListListenerError : ListViewer_wpf_client.ListServiceReference.ListServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
        "e")]
    [System.SerializableAttribute()]
    public partial class ListLockedError : ListViewer_wpf_client.ListServiceReference.ListServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
        "e")]
    [System.SerializableAttribute()]
    public partial class EventError : ListViewer_wpf_client.ListServiceReference.ListServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListNotEnabledError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
        "e")]
    [System.SerializableAttribute()]
    public partial class ListNotEnabledError : ListViewer_wpf_client.ListServiceReference.ListServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
        "")]
    [System.SerializableAttribute()]
    public partial class DeviceServerNotCreatedError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Events")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.EventWithDataDTO))]
    public partial class EventDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO ABoxSomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AdcEventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO BBoxSomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BackupDeviceIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BackupHeadIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.ExtendedStatus BackupStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO CompileSomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DeviceIndexField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.EventControlType[] EventControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.EventRunStatus[] EventStatusField;
        
        private ListViewer_wpf_client.ListServiceReference.ADCEventType EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.ExtendedEventControl[] ExtEventControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.ExtendedStatus ExtendedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HeadIndexField;
        
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OnAirDateField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO OnAirTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] QualifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReconcileKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RelatedPrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RoutingChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.SecondaryData SecondaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] SecondaryEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SegmentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO SomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.Transition TransitionEffectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.SwitchRate TransitionEffectRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO ABoxSom {
            get {
                return this.ABoxSomField;
            }
            set {
                if ((object.ReferenceEquals(this.ABoxSomField, value) != true)) {
                    this.ABoxSomField = value;
                    this.RaisePropertyChanged("ABoxSom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AdcEventId {
            get {
                return this.AdcEventIdField;
            }
            set {
                if ((this.AdcEventIdField.Equals(value) != true)) {
                    this.AdcEventIdField = value;
                    this.RaisePropertyChanged("AdcEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO BBoxSom {
            get {
                return this.BBoxSomField;
            }
            set {
                if ((object.ReferenceEquals(this.BBoxSomField, value) != true)) {
                    this.BBoxSomField = value;
                    this.RaisePropertyChanged("BBoxSom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BackupDeviceIndex {
            get {
                return this.BackupDeviceIndexField;
            }
            set {
                if ((this.BackupDeviceIndexField.Equals(value) != true)) {
                    this.BackupDeviceIndexField = value;
                    this.RaisePropertyChanged("BackupDeviceIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte BackupHeadIndex {
            get {
                return this.BackupHeadIndexField;
            }
            set {
                if ((this.BackupHeadIndexField.Equals(value) != true)) {
                    this.BackupHeadIndexField = value;
                    this.RaisePropertyChanged("BackupHeadIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.ExtendedStatus BackupStatus {
            get {
                return this.BackupStatusField;
            }
            set {
                if ((this.BackupStatusField.Equals(value) != true)) {
                    this.BackupStatusField = value;
                    this.RaisePropertyChanged("BackupStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompileId {
            get {
                return this.CompileIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompileIdField, value) != true)) {
                    this.CompileIdField = value;
                    this.RaisePropertyChanged("CompileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO CompileSom {
            get {
                return this.CompileSomField;
            }
            set {
                if ((object.ReferenceEquals(this.CompileSomField, value) != true)) {
                    this.CompileSomField = value;
                    this.RaisePropertyChanged("CompileSom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DeviceIndex {
            get {
                return this.DeviceIndexField;
            }
            set {
                if ((this.DeviceIndexField.Equals(value) != true)) {
                    this.DeviceIndexField = value;
                    this.RaisePropertyChanged("DeviceIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.EventControlType[] EventControl {
            get {
                return this.EventControlField;
            }
            set {
                if ((object.ReferenceEquals(this.EventControlField, value) != true)) {
                    this.EventControlField = value;
                    this.RaisePropertyChanged("EventControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.EventRunStatus[] EventStatus {
            get {
                return this.EventStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EventStatusField, value) != true)) {
                    this.EventStatusField = value;
                    this.RaisePropertyChanged("EventStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.ADCEventType EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.ExtendedEventControl[] ExtEventControl {
            get {
                return this.ExtEventControlField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtEventControlField, value) != true)) {
                    this.ExtEventControlField = value;
                    this.RaisePropertyChanged("ExtEventControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.ExtendedStatus ExtendedStatus {
            get {
                return this.ExtendedStatusField;
            }
            set {
                if ((this.ExtendedStatusField.Equals(value) != true)) {
                    this.ExtendedStatusField = value;
                    this.RaisePropertyChanged("ExtendedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte HeadIndex {
            get {
                return this.HeadIndexField;
            }
            set {
                if ((this.HeadIndexField.Equals(value) != true)) {
                    this.HeadIndexField = value;
                    this.RaisePropertyChanged("HeadIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OnAirDate {
            get {
                return this.OnAirDateField;
            }
            set {
                if ((this.OnAirDateField.Equals(value) != true)) {
                    this.OnAirDateField = value;
                    this.RaisePropertyChanged("OnAirDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO OnAirTime {
            get {
                return this.OnAirTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.OnAirTimeField, value) != true)) {
                    this.OnAirTimeField = value;
                    this.RaisePropertyChanged("OnAirTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Qualifier {
            get {
                return this.QualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifierField, value) != true)) {
                    this.QualifierField = value;
                    this.RaisePropertyChanged("Qualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReconcileKey {
            get {
                return this.ReconcileKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ReconcileKeyField, value) != true)) {
                    this.ReconcileKeyField = value;
                    this.RaisePropertyChanged("ReconcileKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RelatedPrimary {
            get {
                return this.RelatedPrimaryField;
            }
            set {
                if ((this.RelatedPrimaryField.Equals(value) != true)) {
                    this.RelatedPrimaryField = value;
                    this.RaisePropertyChanged("RelatedPrimary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte RoutingChannel {
            get {
                return this.RoutingChannelField;
            }
            set {
                if ((this.RoutingChannelField.Equals(value) != true)) {
                    this.RoutingChannelField = value;
                    this.RaisePropertyChanged("RoutingChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.SecondaryData SecondaryData {
            get {
                return this.SecondaryDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryDataField, value) != true)) {
                    this.SecondaryDataField = value;
                    this.RaisePropertyChanged("SecondaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] SecondaryEvents {
            get {
                return this.SecondaryEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryEventsField, value) != true)) {
                    this.SecondaryEventsField = value;
                    this.RaisePropertyChanged("SecondaryEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SegmentNumber {
            get {
                return this.SegmentNumberField;
            }
            set {
                if ((this.SegmentNumberField.Equals(value) != true)) {
                    this.SegmentNumberField = value;
                    this.RaisePropertyChanged("SegmentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO Som {
            get {
                return this.SomField;
            }
            set {
                if ((object.ReferenceEquals(this.SomField, value) != true)) {
                    this.SomField = value;
                    this.RaisePropertyChanged("Som");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.Transition TransitionEffect {
            get {
                return this.TransitionEffectField;
            }
            set {
                if ((this.TransitionEffectField.Equals(value) != true)) {
                    this.TransitionEffectField = value;
                    this.RaisePropertyChanged("TransitionEffect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.SwitchRate TransitionEffectRate {
            get {
                return this.TransitionEffectRateField;
            }
            set {
                if ((this.TransitionEffectRateField.Equals(value) != true)) {
                    this.TransitionEffectRateField = value;
                    this.RaisePropertyChanged("TransitionEffectRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeCodeDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Timecode")]
    [System.SerializableAttribute()]
    public partial class TimeCodeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte FrameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.FrameRateDTO FrameRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte HourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SecondField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Frame {
            get {
                return this.FrameField;
            }
            set {
                if ((this.FrameField.Equals(value) != true)) {
                    this.FrameField = value;
                    this.RaisePropertyChanged("Frame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.FrameRateDTO FrameRate {
            get {
                return this.FrameRateField;
            }
            set {
                if ((object.ReferenceEquals(this.FrameRateField, value) != true)) {
                    this.FrameRateField = value;
                    this.RaisePropertyChanged("FrameRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Hour {
            get {
                return this.HourField;
            }
            set {
                if ((this.HourField.Equals(value) != true)) {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Minute {
            get {
                return this.MinuteField;
            }
            set {
                if ((this.MinuteField.Equals(value) != true)) {
                    this.MinuteField = value;
                    this.RaisePropertyChanged("Minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Second {
            get {
                return this.SecondField;
            }
            set {
                if ((this.SecondField.Equals(value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecondaryData", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Events")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.KeyerParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ListServiceReference.AudioOverParams))]
    public partial class SecondaryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventWithDataDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Events")]
    [System.SerializableAttribute()]
    public partial class EventWithDataDTO : ListViewer_wpf_client.ListServiceReference.EventDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataBufferField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DataBuffer {
            get {
                return this.DataBufferField;
            }
            set {
                if ((object.ReferenceEquals(this.DataBufferField, value) != true)) {
                    this.DataBufferField = value;
                    this.RaisePropertyChanged("DataBuffer");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum ExtendedStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ready = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutLookAhead = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Missed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RanShort = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skipped = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Requested = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inprep = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Preroll = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postroll = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERROR = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        READ = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SWITCHPOINT = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NULL = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOSERIAL = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAULT = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOANNOT = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BLACK = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CB = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROGRAM = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BLCKAUD = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BAUDIO = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRGMAUD = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_COM = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PULLED = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOCAL = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNTHRD = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EJECT = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CUED = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TSO = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STOP = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STOPPING = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REWD = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFWD = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECORD = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLAY = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REVJOG = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FWDJOG = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REWVAR = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FWDVAR = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REVSHTL = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FWDSHTL = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLOW = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CUEING = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STILL = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REJECT = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THREAD = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UB_PLAY = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STANDBY = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TENREL = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_DEV = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BUSY = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OFFLINE = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INITIAL = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 56,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventControlType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum EventControlType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPlay = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoThread = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoSwitch = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoRecord = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoTimed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoException = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoUpcount = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualStart = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoContactStart = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoMarkTime = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoDeadroll = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwitchVideoOnly = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwitchAudioOnly = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwitchRejoin = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserBitOnly = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwitchAudioVideoIndependent = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventRunStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum EventRunStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlayedNextVideo = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prerolled = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postrolled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDTitleMismatch = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StandbyOn = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotPlayed = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RanShort = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skipped = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prepared = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSwitched = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Previewed = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RollingNext = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Short = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Long = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Preempted = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncSkipped = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved3 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved4 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved5 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved6 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved7 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved8 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved9 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved10 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved11 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved12 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved13 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved14 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved15 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved16 = 31,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADCEventType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum ADCEventType : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Break = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Logo = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BreakSync = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Secondary = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryKey = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryTransitionKey = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryBacktime = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryWithKey = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryBacktimeGPI = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryGPI = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryTransitionAudioOver = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryAudioOver = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryWithAudioOver = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryData = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondarySystem = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondarySystemBacktime = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryRecordSwitch = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondarySourceSwitch = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryAudioROut = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryRecordDevice = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryComment = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryCompileID = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryAppendFlag = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryBarterSpot = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimaryWithData = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryWithData = 384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryWithDataBacktime = 389,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryDataWithData = 416,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryWithDataWithKey = 390,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryWithDataWithAudioOver = 402,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimaryReq = 768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecondaryReq = 896,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 65535,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedEventControl", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum ExtendedEventControl : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved1 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved3 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved4 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved5 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved6 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved7 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved8 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved9 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved10 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AudibleAutoMarktime = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FrameDropped = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountedRoundDropFrame = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartEventEndTimed = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartEventBackTimed = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatchPrimaryDuration = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transition", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum Transition : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cut = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mix = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wipe = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FadeFade = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CutFade = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FadeCut = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MixedAV = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwitchRate", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum SwitchRate : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Slow = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fast = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastCut = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameRateDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Timecode")]
    [System.SerializableAttribute()]
    public partial class FrameRateDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropframeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.FrameRateEnum FrameRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Dropframe {
            get {
                return this.DropframeField;
            }
            set {
                if ((this.DropframeField.Equals(value) != true)) {
                    this.DropframeField = value;
                    this.RaisePropertyChanged("Dropframe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.FrameRateEnum FrameRate {
            get {
                return this.FrameRateField;
            }
            set {
                if ((this.FrameRateField.Equals(value) != true)) {
                    this.FrameRateField = value;
                    this.RaisePropertyChanged("FrameRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameRateEnum", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum FrameRateEnum : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAL = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NTSC = 41,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyerParams", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Events")]
    [System.SerializableAttribute()]
    public partial class KeyerParams : ListViewer_wpf_client.ListServiceReference.SecondaryData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Is_sSPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.KeyHold KeyHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.MatteMod KeyMatteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.KeyMod KeyModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte KeyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.KeySource KeySourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SSPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Is_sSP {
            get {
                return this.Is_sSPField;
            }
            set {
                if ((this.Is_sSPField.Equals(value) != true)) {
                    this.Is_sSPField = value;
                    this.RaisePropertyChanged("Is_sSP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.KeyHold KeyHold {
            get {
                return this.KeyHoldField;
            }
            set {
                if ((this.KeyHoldField.Equals(value) != true)) {
                    this.KeyHoldField = value;
                    this.RaisePropertyChanged("KeyHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.MatteMod KeyMatte {
            get {
                return this.KeyMatteField;
            }
            set {
                if ((this.KeyMatteField.Equals(value) != true)) {
                    this.KeyMatteField = value;
                    this.RaisePropertyChanged("KeyMatte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.KeyMod KeyMod {
            get {
                return this.KeyModField;
            }
            set {
                if ((this.KeyModField.Equals(value) != true)) {
                    this.KeyModField = value;
                    this.RaisePropertyChanged("KeyMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte KeyNumber {
            get {
                return this.KeyNumberField;
            }
            set {
                if ((this.KeyNumberField.Equals(value) != true)) {
                    this.KeyNumberField = value;
                    this.RaisePropertyChanged("KeyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.KeySource KeySource {
            get {
                return this.KeySourceField;
            }
            set {
                if ((this.KeySourceField.Equals(value) != true)) {
                    this.KeySourceField = value;
                    this.RaisePropertyChanged("KeySource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SSP {
            get {
                return this.SSPField;
            }
            set {
                if ((this.SSPField.Equals(value) != true)) {
                    this.SSPField = value;
                    this.RaisePropertyChanged("SSP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AudioOverParams", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Events")]
    [System.SerializableAttribute()]
    public partial class AudioOverParams : ListViewer_wpf_client.ListServiceReference.SecondaryData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AudioOverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SSPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AudioOver {
            get {
                return this.AudioOverField;
            }
            set {
                if ((this.AudioOverField.Equals(value) != true)) {
                    this.AudioOverField = value;
                    this.RaisePropertyChanged("AudioOver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Ratio {
            get {
                return this.RatioField;
            }
            set {
                if ((this.RatioField.Equals(value) != true)) {
                    this.RatioField = value;
                    this.RaisePropertyChanged("Ratio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SSP {
            get {
                return this.SSPField;
            }
            set {
                if ((this.SSPField.Equals(value) != true)) {
                    this.SSPField = value;
                    this.RaisePropertyChanged("SSP");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyHold", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum KeyHold : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoseKey = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldKey = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatteMod", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum MatteMod : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatteOff = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatteOn = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyMod", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum KeyMod : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shadow = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShadow = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Border = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeySource", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum KeySource : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeySelf = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        External = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chroma = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeOfList", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum TypeOfList : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Random = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Compiler = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sequence = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Annotate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Media = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Redundancy = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RedundancySequence = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Breakaway = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Runway = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListStateValue", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum ListStateValue : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Playing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Threading = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Freeze = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hold = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Upcounting = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recueing = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WillEnd = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WillEndBreak = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventProblemInformationDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Dat" +
        "aTransferObjects.Events")]
    [System.SerializableAttribute()]
    public partial class EventProblemInformationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid DeleteIdField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO DurationField;
        
        private string IdDeletedEventField;
        
        private System.Guid InsertIdField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid DeleteId {
            get {
                return this.DeleteIdField;
            }
            set {
                if ((this.DeleteIdField.Equals(value) != true)) {
                    this.DeleteIdField = value;
                    this.RaisePropertyChanged("DeleteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string IdDeletedEvent {
            get {
                return this.IdDeletedEventField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDeletedEventField, value) != true)) {
                    this.IdDeletedEventField = value;
                    this.RaisePropertyChanged("IdDeletedEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid InsertId {
            get {
                return this.InsertIdField;
            }
            set {
                if ((this.InsertIdField.Equals(value) != true)) {
                    this.InsertIdField = value;
                    this.RaisePropertyChanged("InsertId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsertPlaceType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.Events")]
    public enum InsertPlaceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AtListBegin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterGuid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AtListEnd = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
        "")]
    [System.SerializableAttribute()]
    public partial class ServiceParametersValidationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimecodeCompareResult", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum TimecodeCompareResult : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Greater = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Less = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BreakAwayConfigurationDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Sou" +
        "rce.DataTransferObjects.BreakAway")]
    [System.SerializableAttribute()]
    public partial class BreakAwayConfigurationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.BreakAwayGroupDTO[] GroupListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.BreakAwayGroupDTO[] GroupList {
            get {
                return this.GroupListField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupListField, value) != true)) {
                    this.GroupListField = value;
                    this.RaisePropertyChanged("GroupList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BreakAwayGroupDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Sou" +
        "rce.DataTransferObjects.BreakAway")]
    [System.SerializableAttribute()]
    public partial class BreakAwayGroupDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ListServiceReference.ChannelDescription[] ChannelsField;
        
        private bool CommercialField;
        
        private string DefaultPathField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO GapTimeField;
        
        private string GroupNameField;
        
        private bool JipField;
        
        private bool MaxFillField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO MaxTimeField;
        
        private ListViewer_wpf_client.ListServiceReference.TimeCodeDTO MinFragmentField;
        
        private bool ProgramField;
        
        private string SequencePathField;
        
        private bool SlideField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ListServiceReference.ChannelDescription[] Channels {
            get {
                return this.ChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelsField, value) != true)) {
                    this.ChannelsField = value;
                    this.RaisePropertyChanged("Channels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Commercial {
            get {
                return this.CommercialField;
            }
            set {
                if ((this.CommercialField.Equals(value) != true)) {
                    this.CommercialField = value;
                    this.RaisePropertyChanged("Commercial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DefaultPath {
            get {
                return this.DefaultPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultPathField, value) != true)) {
                    this.DefaultPathField = value;
                    this.RaisePropertyChanged("DefaultPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO GapTime {
            get {
                return this.GapTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.GapTimeField, value) != true)) {
                    this.GapTimeField = value;
                    this.RaisePropertyChanged("GapTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Jip {
            get {
                return this.JipField;
            }
            set {
                if ((this.JipField.Equals(value) != true)) {
                    this.JipField = value;
                    this.RaisePropertyChanged("Jip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool MaxFill {
            get {
                return this.MaxFillField;
            }
            set {
                if ((this.MaxFillField.Equals(value) != true)) {
                    this.MaxFillField = value;
                    this.RaisePropertyChanged("MaxFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO MaxTime {
            get {
                return this.MaxTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxTimeField, value) != true)) {
                    this.MaxTimeField = value;
                    this.RaisePropertyChanged("MaxTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ListViewer_wpf_client.ListServiceReference.TimeCodeDTO MinFragment {
            get {
                return this.MinFragmentField;
            }
            set {
                if ((object.ReferenceEquals(this.MinFragmentField, value) != true)) {
                    this.MinFragmentField = value;
                    this.RaisePropertyChanged("MinFragment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Program {
            get {
                return this.ProgramField;
            }
            set {
                if ((this.ProgramField.Equals(value) != true)) {
                    this.ProgramField = value;
                    this.RaisePropertyChanged("Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SequencePath {
            get {
                return this.SequencePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SequencePathField, value) != true)) {
                    this.SequencePathField = value;
                    this.RaisePropertyChanged("SequencePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Slide {
            get {
                return this.SlideField;
            }
            set {
                if ((this.SlideField.Equals(value) != true)) {
                    this.SlideField = value;
                    this.RaisePropertyChanged("Slide");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelDescription", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Sou" +
        "rce.DataTransferObjects.BreakAway")]
    [System.SerializableAttribute()]
    public partial class ChannelDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ListField;
        
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int List {
            get {
                return this.ListField;
            }
            set {
                if ((this.ListField.Equals(value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BreakAwayListStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Sou" +
        "rce.DataTransferObjects.BreakAway")]
    [System.SerializableAttribute()]
    public partial class BreakAwayListStatusDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DefaultPathField;
        
        private bool HasBreakAwayField;
        
        private bool InBreakAwayField;
        
        private string SequencePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DefaultPath {
            get {
                return this.DefaultPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultPathField, value) != true)) {
                    this.DefaultPathField = value;
                    this.RaisePropertyChanged("DefaultPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool HasBreakAway {
            get {
                return this.HasBreakAwayField;
            }
            set {
                if ((this.HasBreakAwayField.Equals(value) != true)) {
                    this.HasBreakAwayField = value;
                    this.RaisePropertyChanged("HasBreakAway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool InBreakAway {
            get {
                return this.InBreakAwayField;
            }
            set {
                if ((this.InBreakAwayField.Equals(value) != true)) {
                    this.InBreakAwayField = value;
                    this.RaisePropertyChanged("InBreakAway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SequencePath {
            get {
                return this.SequencePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SequencePathField, value) != true)) {
                    this.SequencePathField = value;
                    this.RaisePropertyChanged("SequencePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListChangeType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum ListChangeType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContentsChanged = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayChanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemChanged = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerStatus", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types")]
    public enum ServerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connecting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnecting = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aborted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ListServiceReference.IListService", CallbackContract=typeof(ListViewer_wpf_client.ListServiceReference.IListServiceCallback))]
    public interface IListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatableService/IsAlive", ReplyAction="http://tempuri.org/IHeartbeatableService/IsAliveResponse")]
        void IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeartbeatableService/GetVersion", ReplyAction="http://tempuri.org/IHeartbeatableService/GetVersionResponse")]
        ListViewer_wpf_client.ListServiceReference.ServiceVersion GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetEventsCount", ReplyAction="http://tempuri.org/IListService/GetEventsCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetEventsCountDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetEventsCountListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetEventsCountDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int GetEventsCount(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetList", ReplyAction="http://tempuri.org/IListService/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetListListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] GetList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/RegisterListListener", ReplyAction="http://tempuri.org/IListService/RegisterListListenerResponse")]
        bool RegisterListListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/UnregisterListListener")]
        void UnregisterListListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/UnregisterAllListListeners")]
        void UnregisterAllListListeners(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetFirstMissingMediaEvent", ReplyAction="http://tempuri.org/IListService/GetFirstMissingMediaEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetFirstMissingMediaEventDeviceServerNotCreatedEr" +
            "rorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetFirstMissingMediaEventListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetFirstMissingMediaEventDeviceServerNotRunningEr" +
            "rorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO GetFirstMissingMediaEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetOnAirEvent", ReplyAction="http://tempuri.org/IListService/GetOnAirEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetOnAirEventDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetOnAirEventListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetOnAirEventDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO GetOnAirEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListName", ReplyAction="http://tempuri.org/IListService/GetListNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetListNameListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListNameDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListNameDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        string GetListName(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListType", ReplyAction="http://tempuri.org/IListService/GetListTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetListTypeListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListTypeDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListTypeDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.TypeOfList GetListType(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetLookahead", ReplyAction="http://tempuri.org/IListService/GetLookaheadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetLookaheadDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetLookaheadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetLookaheadDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int GetLookahead(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListState", ReplyAction="http://tempuri.org/IListService/GetListStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListStateDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetListStateListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListStateDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.ListStateValue[] GetListState(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetGapProblemInformation", ReplyAction="http://tempuri.org/IListService/GetGapProblemInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetGapProblemInformationDeviceServerNotCreatedErr" +
            "orFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GetGapProblemInformationListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetGapProblemInformationDeviceServerNotRunningErr" +
            "orFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetGapProblemInformationListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        ListViewer_wpf_client.ListServiceReference.EventProblemInformationDTO GetGapProblemInformation(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/InsertEvent", ReplyAction="http://tempuri.org/IListService/InsertEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/InsertEventDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/InsertEventDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/InsertEventListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/InsertEventListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        ListViewer_wpf_client.ListServiceReference.EventDTO InsertEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO ev, ListViewer_wpf_client.ListServiceReference.InsertPlaceType place, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/InsertEventList", ReplyAction="http://tempuri.org/IListService/InsertEventListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/InsertEventListListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/InsertEventListDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ServiceParametersValidationError), Action="http://tempuri.org/IListService/InsertEventListServiceParametersValidationErrorFa" +
            "ult", Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/InsertEventListListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/InsertEventListDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] InsertEventList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] events, ListViewer_wpf_client.ListServiceReference.InsertPlaceType place, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/ModifyEvent", ReplyAction="http://tempuri.org/IListService/ModifyEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/ModifyEventDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/ModifyEventListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/ModifyEventDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ServiceParametersValidationError), Action="http://tempuri.org/IListService/ModifyEventServiceParametersValidationErrorFault", Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/ModifyEventListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool ModifyEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO ev, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/ModifyEventList", ReplyAction="http://tempuri.org/IListService/ModifyEventListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/ModifyEventListDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ServiceParametersValidationError), Action="http://tempuri.org/IListService/ModifyEventListServiceParametersValidationErrorFa" +
            "ult", Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/ModifyEventListDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/ModifyEventListListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/ModifyEventListListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool ModifyEventList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] events);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/MoveEvent", ReplyAction="http://tempuri.org/IListService/MoveEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/MoveEventListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/MoveEventListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/MoveEventDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/MoveEventDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        bool MoveEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid eventId, System.Guid destination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/MoveEvents", ReplyAction="http://tempuri.org/IListService/MoveEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/MoveEventsDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/MoveEventsListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/MoveEventsDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ServiceParametersValidationError), Action="http://tempuri.org/IListService/MoveEventsServiceParametersValidationErrorFault", Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/MoveEventsListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool MoveEvents(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] events, System.Guid destination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/DeleteEvent", ReplyAction="http://tempuri.org/IListService/DeleteEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/DeleteEventListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/DeleteEventDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/DeleteEventDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/DeleteEventListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool DeleteEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/DeleteEvents", ReplyAction="http://tempuri.org/IListService/DeleteEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/DeleteEventsListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/DeleteEventsListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/DeleteEventsDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/DeleteEventsDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        bool DeleteEvents(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position, int numberOfEvents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/DeleteEventsByGuid", ReplyAction="http://tempuri.org/IListService/DeleteEventsByGuidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/DeleteEventsByGuidDeviceServerNotRunningErrorFaul" +
            "t", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/DeleteEventsByGuidDeviceServerNotCreatedErrorFaul" +
            "t", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/DeleteEventsByGuidListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/DeleteEventsByGuidListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void DeleteEventsByGuid(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] positions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/DeleteAllEvents", ReplyAction="http://tempuri.org/IListService/DeleteAllEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/DeleteAllEventsListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/DeleteAllEventsDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/DeleteAllEventsListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/DeleteAllEventsDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void DeleteAllEvents(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangHold", ReplyAction="http://tempuri.org/IListService/GangHoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangHoldListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangHoldListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangHoldDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangHoldDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangHold(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangAirProtect", ReplyAction="http://tempuri.org/IListService/GangAirProtectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangAirProtectDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangAirProtectDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangAirProtectListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangAirProtectListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void GangAirProtect(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangTensionRelease", ReplyAction="http://tempuri.org/IListService/GangTensionReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangTensionReleaseListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangTensionReleaseDeviceServerNotRunningErrorFaul" +
            "t", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangTensionReleaseDeviceServerNotCreatedErrorFaul" +
            "t", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangTensionReleaseListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void GangTensionRelease(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangUnthread", ReplyAction="http://tempuri.org/IListService/GangUnthreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangUnthreadDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangUnthreadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangUnthreadListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangUnthreadDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangUnthread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangPlus1Sec", ReplyAction="http://tempuri.org/IListService/GangPlus1SecResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangPlus1SecListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangPlus1SecListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangPlus1SecDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangPlus1SecDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangPlus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangPlayGang", ReplyAction="http://tempuri.org/IListService/GangPlayGangResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangPlayGangListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangPlayGangDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangPlayGangListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangPlayGangDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangPlayGang(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangRoll", ReplyAction="http://tempuri.org/IListService/GangRollResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangRollListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangRollDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangRollListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangRollDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangRoll(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangThread", ReplyAction="http://tempuri.org/IListService/GangThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangThreadDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangThreadListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangThreadDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangThreadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void GangThread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangReady", ReplyAction="http://tempuri.org/IListService/GangReadyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangReadyListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangReadyDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangReadyDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangReadyListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void GangReady(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangMinus1Sec", ReplyAction="http://tempuri.org/IListService/GangMinus1SecResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangMinus1SecDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangMinus1SecListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangMinus1SecListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangMinus1SecDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangMinus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangFreeze", ReplyAction="http://tempuri.org/IListService/GangFreezeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangFreezeListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangFreezeDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangFreezeDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangFreezeListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void GangFreeze(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangPlay", ReplyAction="http://tempuri.org/IListService/GangPlayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangPlayDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangPlayListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangPlayListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangPlayDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangPlay(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangRecue", ReplyAction="http://tempuri.org/IListService/GangRecueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangRecueListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangRecueListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangRecueDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangRecueDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangRecue(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangSkip", ReplyAction="http://tempuri.org/IListService/GangSkipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangSkipListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangSkipListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangSkipDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangSkipDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void GangSkip(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GangPlaySecondary", ReplyAction="http://tempuri.org/IListService/GangPlaySecondaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GangPlaySecondaryDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GangPlaySecondaryDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GangPlaySecondaryListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/GangPlaySecondaryListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void GangPlaySecondary(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListThread", ReplyAction="http://tempuri.org/IListService/PerformListThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListThreadDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListThreadDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListThreadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListThread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListUnthread", ReplyAction="http://tempuri.org/IListService/PerformListUnthreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListUnthreadDeviceServerNotRunningErrorFau" +
            "lt", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListUnthreadDeviceServerNotCreatedErrorFau" +
            "lt", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListUnthreadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListUnthread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListPlay", ReplyAction="http://tempuri.org/IListService/PerformListPlayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListPlayListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListPlayDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListPlayDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformListPlay(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListHold", ReplyAction="http://tempuri.org/IListService/PerformListHoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListHoldListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListHoldDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListHoldDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformListHold(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListSkip", ReplyAction="http://tempuri.org/IListService/PerformListSkipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListSkipListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListSkipDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListSkipDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformListSkip(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListFreeze", ReplyAction="http://tempuri.org/IListService/PerformListFreezeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListFreezeDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListFreezeDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListFreezeListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListFreeze(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListRoll", ReplyAction="http://tempuri.org/IListService/PerformListRollResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListRollDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListRollListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListRollDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformListRoll(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListRecue", ReplyAction="http://tempuri.org/IListService/PerformListRecueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListRecueDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListRecueDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListRecueListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListRecue(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListPlus1Sec", ReplyAction="http://tempuri.org/IListService/PerformListPlus1SecResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListPlus1SecDeviceServerNotCreatedErrorFau" +
            "lt", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListPlus1SecDeviceServerNotRunningErrorFau" +
            "lt", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListPlus1SecListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListPlus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListMinus1Sec", ReplyAction="http://tempuri.org/IListService/PerformListMinus1SecResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListMinus1SecDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListMinus1SecListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListMinus1SecDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformListMinus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListReady", ReplyAction="http://tempuri.org/IListService/PerformListReadyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListReadyDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListReadyDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListReadyListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListReady(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListProtect", ReplyAction="http://tempuri.org/IListService/PerformListProtectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListProtectDeviceServerNotCreatedErrorFaul" +
            "t", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListProtectListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListProtectDeviceServerNotRunningErrorFaul" +
            "t", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformListProtect(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformAirProtect", ReplyAction="http://tempuri.org/IListService/PerformAirProtectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformAirProtectDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformAirProtectListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformAirProtectDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformAirProtect(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformListClearDone", ReplyAction="http://tempuri.org/IListService/PerformListClearDoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformListClearDoneDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformListClearDoneDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformListClearDoneListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformListClearDone(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventsClearDone", ReplyAction="http://tempuri.org/IListService/PerformEventsClearDoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventsClearDoneListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventsClearDoneDeviceServerNotRunningError" +
            "Fault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventsClearDoneDeviceServerNotCreatedError" +
            "Fault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformEventsClearDone(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventClearDone", ReplyAction="http://tempuri.org/IListService/PerformEventClearDoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventClearDoneListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventClearDoneDeviceServerNotCreatedErrorF" +
            "ault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventClearDoneDeviceServerNotRunningErrorF" +
            "ault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformEventClearDone(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventThread", ReplyAction="http://tempuri.org/IListService/PerformEventThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventThreadDeviceServerNotRunningErrorFaul" +
            "t", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventThreadDeviceServerNotCreatedErrorFaul" +
            "t", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventThreadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformEventThread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventUnthread", ReplyAction="http://tempuri.org/IListService/PerformEventUnthreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventUnthreadDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventUnthreadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventUnthreadDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformEventUnthread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventRecue", ReplyAction="http://tempuri.org/IListService/PerformEventRecueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventRecueDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventRecueListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventRecueDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformEventRecue(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventPreview", ReplyAction="http://tempuri.org/IListService/PerformEventPreviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventPreviewDeviceServerNotRunningErrorFau" +
            "lt", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventPreviewDeviceServerNotCreatedErrorFau" +
            "lt", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventPreviewListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformEventPreview(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/ToggleLookahead", ReplyAction="http://tempuri.org/IListService/ToggleLookaheadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/ToggleLookaheadDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/ToggleLookaheadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/ToggleLookaheadDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void ToggleLookahead(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/SetLookahead", ReplyAction="http://tempuri.org/IListService/SetLookaheadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/SetLookaheadDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/SetLookaheadDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/SetLookaheadListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void SetLookahead(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, int lookahead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformCutNext", ReplyAction="http://tempuri.org/IListService/PerformCutNextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformCutNextListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformCutNextDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformCutNextDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformCutNext(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformLetRoll", ReplyAction="http://tempuri.org/IListService/PerformLetRollResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformLetRollDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformLetRollDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformLetRollListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformLetRoll(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformRollSecondary", ReplyAction="http://tempuri.org/IListService/PerformRollSecondaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformRollSecondaryDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformRollSecondaryDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformRollSecondaryListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformRollSecondary(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformTensionRelease", ReplyAction="http://tempuri.org/IListService/PerformTensionReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformTensionReleaseDeviceServerNotRunningErrorF" +
            "ault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformTensionReleaseListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformTensionReleaseDeviceServerNotCreatedErrorF" +
            "ault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformTensionRelease(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/RegisterConnectionStateListener", ReplyAction="http://tempuri.org/IListService/RegisterConnectionStateListenerResponse")]
        bool RegisterConnectionStateListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/UnregisterConnectionStateListener")]
        void UnregisterConnectionStateListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetAvailableDeviceServers", ReplyAction="http://tempuri.org/IListService/GetAvailableDeviceServersResponse")]
        string[] GetAvailableDeviceServers(ListViewer_wpf_client.ListServiceReference.LoginSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetAllConfiguredServers", ReplyAction="http://tempuri.org/IListService/GetAllConfiguredServersResponse")]
        string[] GetAllConfiguredServers(ListViewer_wpf_client.ListServiceReference.LoginSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListCount", ReplyAction="http://tempuri.org/IListService/GetListCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListCountDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetListCountListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListCountDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int GetListCount(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListPartial", ReplyAction="http://tempuri.org/IListService/GetListPartialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetListPartialListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListPartialDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListPartialDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListPartial(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid start, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/LockList", ReplyAction="http://tempuri.org/IListService/LockListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/LockListDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/LockListListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/LockListDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/LockListListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool LockList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/UnlockList", ReplyAction="http://tempuri.org/IListService/UnlockListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/UnlockListDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/UnlockListListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/UnlockListDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/UnlockListListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void UnlockList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/IsListAvailable", ReplyAction="http://tempuri.org/IListService/IsListAvailableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/IsListAvailableDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/IsListAvailableDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/IsListAvailableListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListLockedError), Action="http://tempuri.org/IListService/IsListAvailableListLockedErrorFault", Name="ListLockedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool IsListAvailable(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/CheckListCapacity", ReplyAction="http://tempuri.org/IListService/CheckListCapacityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/CheckListCapacityDeviceServerNotRunningErrorFault" +
            "", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/CheckListCapacityDeviceServerNotCreatedErrorFault" +
            "", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/CheckListCapacityListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool CheckListCapacity(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, int numberOfEvents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetMaxEventsInList", ReplyAction="http://tempuri.org/IListService/GetMaxEventsInListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetMaxEventsInListListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetMaxEventsInListDeviceServerNotRunningErrorFaul" +
            "t", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetMaxEventsInListDeviceServerNotCreatedErrorFaul" +
            "t", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        int GetMaxEventsInList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListPage", ReplyAction="http://tempuri.org/IListService/GetListPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListPageDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListPageDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListPage(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int listIndex, int offset, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListFiltered", ReplyAction="http://tempuri.org/IListService/GetListFilteredResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListFilteredDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListFilteredDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListFiltered(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int listIndex, int doneCount, int onAirCount, int nextCount, int errorCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListsByPeriod", ReplyAction="http://tempuri.org/IListService/GetListsByPeriodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ServiceParametersValidationError), Action="http://tempuri.org/IListService/GetListsByPeriodServiceParametersValidationErrorF" +
            "ault", Name="ServiceParametersValidationError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListsByPeriodDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListsByPeriodDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[][] GetListsByPeriod(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] listIndexes, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetListOfSecondaries", ReplyAction="http://tempuri.org/IListService/GetListOfSecondariesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetListOfSecondariesDeviceServerNotCreatedErrorFa" +
            "ult", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetListOfSecondariesDeviceServerNotRunningErrorFa" +
            "ult", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListOfSecondaries(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int listIndex, System.Guid relatedPrimary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/RippleTime", ReplyAction="http://tempuri.org/IListService/RippleTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/RippleTimeDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/RippleTimeDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.TimecodeCompareResult RippleTime(out ListViewer_wpf_client.ListServiceReference.TimeCodeDTO holdtime, ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformEventToggleHardStart", ReplyAction="http://tempuri.org/IListService/PerformEventToggleHardStartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformEventToggleHardStartListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/PerformEventToggleHardStartDeviceServerNotRunning" +
            "ErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/PerformEventToggleHardStartDeviceServerNotCreated" +
            "ErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        void PerformEventToggleHardStart(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetPullDataList", ReplyAction="http://tempuri.org/IListService/GetPullDataListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetPullDataListDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetPullDataListDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        ListViewer_wpf_client.ListServiceReference.EventDTO[] GetPullDataList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetExtListName", ReplyAction="http://tempuri.org/IListService/GetExtListNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/GetExtListNameDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetExtListNameListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/GetExtListNameDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        string GetExtListName(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/SetExtListName", ReplyAction="http://tempuri.org/IListService/SetExtListNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotCreatedError), Action="http://tempuri.org/IListService/SetExtListNameDeviceServerNotCreatedErrorFault", Name="DeviceServerNotCreatedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.DeviceServerNotRunningError), Action="http://tempuri.org/IListService/SetExtListNameDeviceServerNotRunningErrorFault", Name="DeviceServerNotRunningError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Types.ServiceErrors" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/SetExtListNameListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void SetExtListName(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetCommercialContentInfo", ReplyAction="http://tempuri.org/IListService/GetCommercialContentInfoResponse")]
        string[] GetCommercialContentInfo(ListViewer_wpf_client.ListServiceReference.LoginSession ls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/CheckMaterialIds", ReplyAction="http://tempuri.org/IListService/CheckMaterialIdsResponse")]
        bool[] CheckMaterialIds(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetBreakAwayConfiguration", ReplyAction="http://tempuri.org/IListService/GetBreakAwayConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetBreakAwayConfigurationListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        ListViewer_wpf_client.ListServiceReference.BreakAwayConfigurationDTO GetBreakAwayConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/SetBreakAwayConfiguration", ReplyAction="http://tempuri.org/IListService/SetBreakAwayConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/SetBreakAwayConfigurationListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        bool SetBreakAwayConfiguration(ListViewer_wpf_client.ListServiceReference.BreakAwayConfigurationDTO breakAwayConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/GetBreakAwayListStatus", ReplyAction="http://tempuri.org/IListService/GetBreakAwayListStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/GetBreakAwayListStatusListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        ListViewer_wpf_client.ListServiceReference.BreakAwayListStatusDTO GetBreakAwayListStatus(string server, int list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformBreakAway", ReplyAction="http://tempuri.org/IListService/PerformBreakAwayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformBreakAwayListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformBreakAway(string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] baList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IListService/PerformBreakAwayReturn", ReplyAction="http://tempuri.org/IListService/PerformBreakAwayReturnResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ListServiceReference.ListServiceError), Action="http://tempuri.org/IListService/PerformBreakAwayReturnListServiceErrorFault", Name="ListServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ListServic" +
            "e")]
        void PerformBreakAwayReturn(string server, int list);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IListServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnListChange")]
        void OnListChange(string server, int list, ListViewer_wpf_client.ListServiceReference.ListChangeType changeType);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnConnectionStateChange")]
        void OnConnectionStateChange(string server, ListViewer_wpf_client.ListServiceReference.ServerStatus serverStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnEventsUpdated")]
        void OnEventsUpdated(string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] updatedEvents);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnEventsDeleted")]
        void OnEventsDeleted(string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] deletedEvents);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnEventsAdded")]
        void OnEventsAdded(string server, int list, System.Guid afterID, ListViewer_wpf_client.ListServiceReference.EventDTO[] addedEvents);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnEventsMoved")]
        void OnEventsMoved(string server, int list, System.Guid source, System.Guid destination, System.Guid[] movedEvents);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/ListLocked")]
        void ListLocked(string server, int list, string clientName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/ListUnlocked")]
        void ListUnlocked(string server, int list, string clientName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/OnBreakAwayListStatusChanged")]
        void OnBreakAwayListStatusChanged(string server, int list, ListViewer_wpf_client.ListServiceReference.BreakAwayListStatusDTO baListStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IListService/CheckAvailability")]
        void CheckAvailability();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IListServiceChannel : ListViewer_wpf_client.ListServiceReference.IListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListServiceClient : System.ServiceModel.DuplexClientBase<ListViewer_wpf_client.ListServiceReference.IListService>, ListViewer_wpf_client.ListServiceReference.IListService {
        
        public ListServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ListServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ListServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void IsAlive() {
            base.Channel.IsAlive();
        }
        
        public ListViewer_wpf_client.ListServiceReference.ServiceVersion GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public int GetEventsCount(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetEventsCount(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] GetList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetList(session, server, list);
        }
        
        public bool RegisterListListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.RegisterListListener(session, server, list);
        }
        
        public void UnregisterListListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.UnregisterListListener(session, server, list);
        }
        
        public void UnregisterAllListListeners(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server) {
            base.Channel.UnregisterAllListListeners(session, server);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO GetFirstMissingMediaEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetFirstMissingMediaEvent(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO GetOnAirEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetOnAirEvent(session, server, list);
        }
        
        public string GetListName(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetListName(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.TypeOfList GetListType(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetListType(session, server, list);
        }
        
        public int GetLookahead(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetLookahead(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.ListStateValue[] GetListState(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetListState(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventProblemInformationDTO GetGapProblemInformation(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetGapProblemInformation(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO InsertEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO ev, ListViewer_wpf_client.ListServiceReference.InsertPlaceType place, System.Guid position) {
            return base.Channel.InsertEvent(session, server, list, ev, place, position);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] InsertEventList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] events, ListViewer_wpf_client.ListServiceReference.InsertPlaceType place, System.Guid position) {
            return base.Channel.InsertEventList(session, server, list, events, place, position);
        }
        
        public bool ModifyEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO ev, System.Guid position) {
            return base.Channel.ModifyEvent(session, server, list, ev, position);
        }
        
        public bool ModifyEventList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] events) {
            return base.Channel.ModifyEventList(session, server, list, events);
        }
        
        public bool MoveEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid eventId, System.Guid destination) {
            return base.Channel.MoveEvent(session, server, list, eventId, destination);
        }
        
        public bool MoveEvents(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] events, System.Guid destination) {
            return base.Channel.MoveEvents(session, server, list, events, destination);
        }
        
        public bool DeleteEvent(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            return base.Channel.DeleteEvent(session, server, list, position);
        }
        
        public bool DeleteEvents(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position, int numberOfEvents) {
            return base.Channel.DeleteEvents(session, server, list, position, numberOfEvents);
        }
        
        public void DeleteEventsByGuid(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] positions) {
            base.Channel.DeleteEventsByGuid(session, server, list, positions);
        }
        
        public void DeleteAllEvents(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.DeleteAllEvents(session, server, list);
        }
        
        public void GangHold(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangHold(session, server, lists);
        }
        
        public void GangAirProtect(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangAirProtect(session, server, lists);
        }
        
        public void GangTensionRelease(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangTensionRelease(session, server, lists);
        }
        
        public void GangUnthread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangUnthread(session, server, lists);
        }
        
        public void GangPlus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangPlus1Sec(session, server, lists);
        }
        
        public void GangPlayGang(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangPlayGang(session, server, lists);
        }
        
        public void GangRoll(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangRoll(session, server, lists);
        }
        
        public void GangThread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangThread(session, server, lists);
        }
        
        public void GangReady(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangReady(session, server, lists);
        }
        
        public void GangMinus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangMinus1Sec(session, server, lists);
        }
        
        public void GangFreeze(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangFreeze(session, server, lists);
        }
        
        public void GangPlay(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangPlay(session, server, lists);
        }
        
        public void GangRecue(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangRecue(session, server, lists);
        }
        
        public void GangSkip(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangSkip(session, server, lists);
        }
        
        public void GangPlaySecondary(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] lists) {
            base.Channel.GangPlaySecondary(session, server, lists);
        }
        
        public void PerformListThread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListThread(session, server, list);
        }
        
        public void PerformListUnthread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListUnthread(session, server, list);
        }
        
        public void PerformListPlay(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListPlay(session, server, list);
        }
        
        public void PerformListHold(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListHold(session, server, list);
        }
        
        public void PerformListSkip(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListSkip(session, server, list);
        }
        
        public void PerformListFreeze(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListFreeze(session, server, list);
        }
        
        public void PerformListRoll(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListRoll(session, server, list);
        }
        
        public void PerformListRecue(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListRecue(session, server, list);
        }
        
        public void PerformListPlus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListPlus1Sec(session, server, list);
        }
        
        public void PerformListMinus1Sec(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListMinus1Sec(session, server, list);
        }
        
        public void PerformListReady(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListReady(session, server, list);
        }
        
        public void PerformListProtect(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListProtect(session, server, list);
        }
        
        public void PerformAirProtect(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] position) {
            base.Channel.PerformAirProtect(session, server, list, position);
        }
        
        public void PerformListClearDone(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformListClearDone(session, server, list);
        }
        
        public void PerformEventsClearDone(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] position) {
            base.Channel.PerformEventsClearDone(session, server, list, position);
        }
        
        public void PerformEventClearDone(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            base.Channel.PerformEventClearDone(session, server, list, position);
        }
        
        public void PerformEventThread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            base.Channel.PerformEventThread(session, server, list, position);
        }
        
        public void PerformEventUnthread(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            base.Channel.PerformEventUnthread(session, server, list, position);
        }
        
        public void PerformEventRecue(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            base.Channel.PerformEventRecue(session, server, list, position);
        }
        
        public void PerformEventPreview(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            base.Channel.PerformEventPreview(session, server, list, position);
        }
        
        public void ToggleLookahead(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.ToggleLookahead(session, server, list);
        }
        
        public void SetLookahead(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, int lookahead) {
            base.Channel.SetLookahead(session, server, list, lookahead);
        }
        
        public void PerformCutNext(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformCutNext(session, server, list);
        }
        
        public void PerformLetRoll(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformLetRoll(session, server, list);
        }
        
        public void PerformRollSecondary(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformRollSecondary(session, server, list);
        }
        
        public void PerformTensionRelease(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            base.Channel.PerformTensionRelease(session, server, list);
        }
        
        public bool RegisterConnectionStateListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server) {
            return base.Channel.RegisterConnectionStateListener(session, server);
        }
        
        public void UnregisterConnectionStateListener(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server) {
            base.Channel.UnregisterConnectionStateListener(session, server);
        }
        
        public string[] GetAvailableDeviceServers(ListViewer_wpf_client.ListServiceReference.LoginSession session) {
            return base.Channel.GetAvailableDeviceServers(session);
        }
        
        public string[] GetAllConfiguredServers(ListViewer_wpf_client.ListServiceReference.LoginSession session) {
            return base.Channel.GetAllConfiguredServers(session);
        }
        
        public int GetListCount(string server) {
            return base.Channel.GetListCount(server);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListPartial(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid start, int count) {
            return base.Channel.GetListPartial(session, server, list, start, count);
        }
        
        public bool LockList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string clientName) {
            return base.Channel.LockList(session, server, list, clientName);
        }
        
        public void UnlockList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string clientName) {
            base.Channel.UnlockList(session, server, list, clientName);
        }
        
        public bool IsListAvailable(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.IsListAvailable(session, server, list);
        }
        
        public bool CheckListCapacity(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, int numberOfEvents) {
            return base.Channel.CheckListCapacity(session, server, list, numberOfEvents);
        }
        
        public int GetMaxEventsInList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetMaxEventsInList(session, server, list);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListPage(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int listIndex, int offset, int count) {
            return base.Channel.GetListPage(session, server, listIndex, offset, count);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListFiltered(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int listIndex, int doneCount, int onAirCount, int nextCount, int errorCount) {
            return base.Channel.GetListFiltered(session, server, listIndex, doneCount, onAirCount, nextCount, errorCount);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[][] GetListsByPeriod(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int[] listIndexes, string from, string to) {
            return base.Channel.GetListsByPeriod(session, server, listIndexes, from, to);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] GetListOfSecondaries(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int listIndex, System.Guid relatedPrimary) {
            return base.Channel.GetListOfSecondaries(session, server, listIndex, relatedPrimary);
        }
        
        public ListViewer_wpf_client.ListServiceReference.TimecodeCompareResult RippleTime(out ListViewer_wpf_client.ListServiceReference.TimeCodeDTO holdtime, ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid position) {
            return base.Channel.RippleTime(out holdtime, session, server, list, position);
        }
        
        public void PerformEventToggleHardStart(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, System.Guid[] position) {
            base.Channel.PerformEventToggleHardStart(session, server, list, position);
        }
        
        public ListViewer_wpf_client.ListServiceReference.EventDTO[] GetPullDataList(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetPullDataList(session, server, list);
        }
        
        public string GetExtListName(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list) {
            return base.Channel.GetExtListName(session, server, list);
        }
        
        public void SetExtListName(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string filename) {
            base.Channel.SetExtListName(session, server, list, filename);
        }
        
        public string[] GetCommercialContentInfo(ListViewer_wpf_client.ListServiceReference.LoginSession ls) {
            return base.Channel.GetCommercialContentInfo(ls);
        }
        
        public bool[] CheckMaterialIds(ListViewer_wpf_client.ListServiceReference.LoginSession session, string server, int list, string[] ids) {
            return base.Channel.CheckMaterialIds(session, server, list, ids);
        }
        
        public ListViewer_wpf_client.ListServiceReference.BreakAwayConfigurationDTO GetBreakAwayConfiguration() {
            return base.Channel.GetBreakAwayConfiguration();
        }
        
        public bool SetBreakAwayConfiguration(ListViewer_wpf_client.ListServiceReference.BreakAwayConfigurationDTO breakAwayConfig) {
            return base.Channel.SetBreakAwayConfiguration(breakAwayConfig);
        }
        
        public ListViewer_wpf_client.ListServiceReference.BreakAwayListStatusDTO GetBreakAwayListStatus(string server, int list) {
            return base.Channel.GetBreakAwayListStatus(server, list);
        }
        
        public void PerformBreakAway(string server, int list, ListViewer_wpf_client.ListServiceReference.EventDTO[] baList) {
            base.Channel.PerformBreakAway(server, list, baList);
        }
        
        public void PerformBreakAwayReturn(string server, int list) {
            base.Channel.PerformBreakAwayReturn(server, list);
        }
    }
}
