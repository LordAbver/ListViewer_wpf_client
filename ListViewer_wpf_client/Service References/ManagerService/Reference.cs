//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ListViewer_wpf_client.ManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagerServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceFaultedError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceMissedError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceNotExistError))]
    public partial class ManagerServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFaultedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    [System.SerializableAttribute()]
    public partial class ServiceFaultedError : ListViewer_wpf_client.ManagerService.ManagerServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceMissedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    [System.SerializableAttribute()]
    public partial class ServiceMissedError : ListViewer_wpf_client.ManagerService.ManagerServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    [System.SerializableAttribute()]
    public partial class ServiceNotExistError : ListViewer_wpf_client.ManagerService.ManagerServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceDTO", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    [System.SerializableAttribute()]
    public partial class ServiceDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri EndPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ManagerService.HostingType HostingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] ServiceDependenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ManagerService.ServiceState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListViewer_wpf_client.ManagerService.ServiceType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri EndPoint {
            get {
                return this.EndPointField;
            }
            set {
                if ((object.ReferenceEquals(this.EndPointField, value) != true)) {
                    this.EndPointField = value;
                    this.RaisePropertyChanged("EndPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ManagerService.HostingType Hosting {
            get {
                return this.HostingField;
            }
            set {
                if ((this.HostingField.Equals(value) != true)) {
                    this.HostingField = value;
                    this.RaisePropertyChanged("Hosting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] ServiceDependencies {
            get {
                return this.ServiceDependenciesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceDependenciesField, value) != true)) {
                    this.ServiceDependenciesField = value;
                    this.RaisePropertyChanged("ServiceDependencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ManagerService.ServiceState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListViewer_wpf_client.ManagerService.ServiceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostingType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    public enum HostingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelfHosting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IIS = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceState", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    public enum ServiceState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faulted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Starting = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopping = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Restarting = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Missing = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
        "vice")]
    public enum ServiceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListService = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AsRunService = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceService = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorReportingService = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimecodeService = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataService = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationService = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StorageService = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialService = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecurityService = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialValidationService = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceVersion", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.Common.Con" +
        "figuration")]
    [System.SerializableAttribute()]
    public partial class ServiceVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, System.Version> ServiceModulesVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, System.Version> ServiceModulesVersion {
            get {
                return this.ServiceModulesVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceModulesVersionField, value) != true)) {
                    this.ServiceModulesVersionField = value;
                    this.RaisePropertyChanged("ServiceModulesVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManagerService.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/StartService", ReplyAction="http://tempuri.org/IManagerService/StartServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceNotExistError), Action="http://tempuri.org/IManagerService/StartServiceServiceNotExistErrorFault", Name="ServiceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        void StartService(System.Guid serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/StopService", ReplyAction="http://tempuri.org/IManagerService/StopServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceNotExistError), Action="http://tempuri.org/IManagerService/StopServiceServiceNotExistErrorFault", Name="ServiceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        void StopService(System.Guid serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RestartService", ReplyAction="http://tempuri.org/IManagerService/RestartServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceNotExistError), Action="http://tempuri.org/IManagerService/RestartServiceServiceNotExistErrorFault", Name="ServiceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        void RestartService(System.Guid serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetConfiguration", ReplyAction="http://tempuri.org/IManagerService/GetConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceFaultedError), Action="http://tempuri.org/IManagerService/GetConfigurationServiceFaultedErrorFault", Name="ServiceFaultedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ManagerServiceError), Action="http://tempuri.org/IManagerService/GetConfigurationManagerServiceErrorFault", Name="ManagerServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceNotExistError), Action="http://tempuri.org/IManagerService/GetConfigurationServiceNotExistErrorFault", Name="ServiceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceMissedError), Action="http://tempuri.org/IManagerService/GetConfigurationServiceMissedErrorFault", Name="ServiceMissedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        string GetConfiguration(System.Guid serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetConfiguration", ReplyAction="http://tempuri.org/IManagerService/SetConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceNotExistError), Action="http://tempuri.org/IManagerService/SetConfigurationServiceNotExistErrorFault", Name="ServiceNotExistError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceFaultedError), Action="http://tempuri.org/IManagerService/SetConfigurationServiceFaultedErrorFault", Name="ServiceFaultedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ManagerServiceError), Action="http://tempuri.org/IManagerService/SetConfigurationManagerServiceErrorFault", Name="ManagerServiceError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        [System.ServiceModel.FaultContractAttribute(typeof(ListViewer_wpf_client.ManagerService.ServiceMissedError), Action="http://tempuri.org/IManagerService/SetConfigurationServiceMissedErrorFault", Name="ServiceMissedError", Namespace="http://schemas.datacontract.org/2004/07/Harris.Automation.ADC.Services.ManagerSer" +
            "vice")]
        void SetConfiguration(System.Guid serviceId, string config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetServicesInformation", ReplyAction="http://tempuri.org/IManagerService/GetServicesInformationResponse")]
        ListViewer_wpf_client.ManagerService.ServiceDTO[] GetServicesInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetServicesConfiguration", ReplyAction="http://tempuri.org/IManagerService/SetServicesConfigurationResponse")]
        void SetServicesConfiguration(ListViewer_wpf_client.ManagerService.ServiceDTO[] services);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveService", ReplyAction="http://tempuri.org/IManagerService/RemoveServiceResponse")]
        void RemoveService(System.Guid serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SetServiceConfiguration", ReplyAction="http://tempuri.org/IManagerService/SetServiceConfigurationResponse")]
        void SetServiceConfiguration(ListViewer_wpf_client.ManagerService.ServiceDTO service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/SaveServicesConfiguration", ReplyAction="http://tempuri.org/IManagerService/SaveServicesConfigurationResponse")]
        void SaveServicesConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/DumpConfiguration", ReplyAction="http://tempuri.org/IManagerService/DumpConfigurationResponse")]
        string DumpConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RestoreConfiguration", ReplyAction="http://tempuri.org/IManagerService/RestoreConfigurationResponse")]
        void RestoreConfiguration(string config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetAvailableDeviceServers", ReplyAction="http://tempuri.org/IManagerService/GetAvailableDeviceServersResponse")]
        string[] GetAvailableDeviceServers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetServiceVersion", ReplyAction="http://tempuri.org/IManagerService/GetServiceVersionResponse")]
        ListViewer_wpf_client.ManagerService.ServiceVersion GetServiceVersion(System.Guid serviceId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceChannel : ListViewer_wpf_client.ManagerService.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<ListViewer_wpf_client.ManagerService.IManagerService>, ListViewer_wpf_client.ManagerService.IManagerService {
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartService(System.Guid serviceId) {
            base.Channel.StartService(serviceId);
        }
        
        public void StopService(System.Guid serviceId) {
            base.Channel.StopService(serviceId);
        }
        
        public void RestartService(System.Guid serviceId) {
            base.Channel.RestartService(serviceId);
        }
        
        public string GetConfiguration(System.Guid serviceId) {
            return base.Channel.GetConfiguration(serviceId);
        }
        
        public void SetConfiguration(System.Guid serviceId, string config) {
            base.Channel.SetConfiguration(serviceId, config);
        }
        
        public ListViewer_wpf_client.ManagerService.ServiceDTO[] GetServicesInformation() {
            return base.Channel.GetServicesInformation();
        }
        
        public void SetServicesConfiguration(ListViewer_wpf_client.ManagerService.ServiceDTO[] services) {
            base.Channel.SetServicesConfiguration(services);
        }
        
        public void RemoveService(System.Guid serviceId) {
            base.Channel.RemoveService(serviceId);
        }
        
        public void SetServiceConfiguration(ListViewer_wpf_client.ManagerService.ServiceDTO service) {
            base.Channel.SetServiceConfiguration(service);
        }
        
        public void SaveServicesConfiguration() {
            base.Channel.SaveServicesConfiguration();
        }
        
        public string DumpConfiguration() {
            return base.Channel.DumpConfiguration();
        }
        
        public void RestoreConfiguration(string config) {
            base.Channel.RestoreConfiguration(config);
        }
        
        public string[] GetAvailableDeviceServers() {
            return base.Channel.GetAvailableDeviceServers();
        }
        
        public ListViewer_wpf_client.ManagerService.ServiceVersion GetServiceVersion(System.Guid serviceId) {
            return base.Channel.GetServiceVersion(serviceId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManagerService.IManagerNotificationService", CallbackContract=typeof(ListViewer_wpf_client.ManagerService.IManagerNotificationServiceCallback))]
    public interface IManagerNotificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerNotificationService/Subscribe", ReplyAction="http://tempuri.org/IManagerNotificationService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerNotificationService/Unsubscribe", ReplyAction="http://tempuri.org/IManagerNotificationService/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerNotificationService/DumpConfigurationAsync", ReplyAction="http://tempuri.org/IManagerNotificationService/DumpConfigurationAsyncResponse")]
        void DumpConfigurationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerNotificationService/RestoreConfigurationAsync", ReplyAction="http://tempuri.org/IManagerNotificationService/RestoreConfigurationAsyncResponse")]
        void RestoreConfigurationAsync(string config);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerNotificationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IManagerNotificationService/ServiceStateChanged")]
        void ServiceStateChanged(System.Guid serviceId, ListViewer_wpf_client.ManagerService.ServiceState state);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IManagerNotificationService/ConfigurationDumpCompleted")]
        void ConfigurationDumpCompleted(string config);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IManagerNotificationService/ConfigurationRestoreCompleted")]
        void ConfigurationRestoreCompleted(bool success);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerNotificationServiceChannel : ListViewer_wpf_client.ManagerService.IManagerNotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerNotificationServiceClient : System.ServiceModel.DuplexClientBase<ListViewer_wpf_client.ManagerService.IManagerNotificationService>, ListViewer_wpf_client.ManagerService.IManagerNotificationService {
        
        public ManagerNotificationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ManagerNotificationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ManagerNotificationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerNotificationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerNotificationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public void DumpConfigurationAsync() {
            base.Channel.DumpConfigurationAsync();
        }
        
        public void RestoreConfigurationAsync(string config) {
            base.Channel.RestoreConfigurationAsync(config);
        }
    }
}
